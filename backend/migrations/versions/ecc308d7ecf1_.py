"""empty message

Revision ID: ecc308d7ecf1
Revises: 
Create Date: 2025-08-31 21:05:52.388260

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ecc308d7ecf1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customer_profiles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company', sa.String(length=255), nullable=True),
    sa.Column('contacts', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('specializations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('executor_profiles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_specialization', sa.Integer(), nullable=False),
    sa.Column('contacts', sa.Text(), nullable=True),
    sa.Column('experience', sa.Integer(), nullable=False),
    sa.Column('skills', sa.Text(), nullable=True),
    sa.Column('hourly_rate', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['id_specialization'], ['specializations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('balance', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('id_executor_profile', sa.Integer(), nullable=True),
    sa.Column('id_customer_profile', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_customer_profile'], ['customer_profiles.id'], ),
    sa.ForeignKeyConstraint(['id_executor_profile'], ['executor_profiles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('services',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('id_specialization', sa.Integer(), nullable=False),
    sa.Column('id_user_executor', sa.Integer(), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('delivery_time', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_specialization'], ['specializations.id'], ),
    sa.ForeignKeyConstraint(['id_user_executor'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_user_customer', sa.Integer(), nullable=False),
    sa.Column('id_user_executor', sa.Integer(), nullable=False),
    sa.Column('id_service', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('deadline', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['id_service'], ['services.id'], ),
    sa.ForeignKeyConstraint(['id_user_customer'], ['users.id'], ),
    sa.ForeignKeyConstraint(['id_user_executor'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_user_sender', sa.Integer(), nullable=False),
    sa.Column('id_user_recipient', sa.Integer(), nullable=False),
    sa.Column('id_order', sa.Integer(), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['id_order'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['id_user_recipient'], ['users.id'], ),
    sa.ForeignKeyConstraint(['id_user_sender'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('id_user_author', sa.Integer(), nullable=False),
    sa.Column('id_user_target', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['id_user_author'], ['users.id'], ),
    sa.ForeignKeyConstraint(['id_user_target'], ['users.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_order', sa.Integer(), nullable=True),
    sa.Column('id_user_sender', sa.Integer(), nullable=False),
    sa.Column('id_user_recipient', sa.Integer(), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('commission', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['id_order'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['id_user_recipient'], ['users.id'], ),
    sa.ForeignKeyConstraint(['id_user_sender'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('reviews')
    op.drop_table('messages')
    op.drop_table('orders')
    op.drop_table('services')
    op.drop_table('users')
    op.drop_table('executor_profiles')
    op.drop_table('specializations')
    op.drop_table('customer_profiles')
    # ### end Alembic commands ###
